version: "3.9"

services:
  # Pipelines
  etl_pipeline:
    build:
      context: ./etl_pipeline
      dockerfile: ./Dockerfile
    container_name: etl_pipeline
    image: etl_pipeline:latest
    volumes:
      - ./etl_pipeline:/opt/dagster/app
    env_file:
      - .env
    ports:
      - "4000:4000"
    networks:
      - quakeflow_japan_network

  # PostgreSQL
  quakeflow_japan_psql:
    image: postgres:15
    container_name: quakeflow_japan_psql
    volumes:
      - ./postgresql:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    env_file:
      - .env
    networks:
      - quakeflow_japan_network

  # MinIO
  quakeflow_japan_minio:
    image: minio/minio
    container_name: quakeflow_japan_minio
    hostname: quakeflow_japan_minio
    ports:
      - "9000:9000"
      - "9001:9001"
    command: [ "server", "/data", "--console-address", ":9001" ]
    volumes:
      - ./minio:/data
    env_file:
      - .env
    networks:
      - quakeflow_japan_network

  # MinIO Client
  quakeflow_japan_mc:
    image: minio/mc
    container_name: quakeflow_japan_mc
    hostname: quakeflow_japan_mc
    restart: on-failure
    env_file:
      - .env
    entrypoint: >
      /bin/sh -c "
        until (/usr/bin/mc config host add quakeflow_japan_minio http://quakeflow_japan_minio:9000 $MINIO_ROOT_USER $MINIO_ROOT_PASSWORD); do
          echo '...waiting for minio...' && sleep 1;
        done;
        /usr/bin/mc mb quakeflow_japan_minio/warehouse;
        /usr/bin/mc policy set public quakeflow_japan_minio/warehouse;
        exit 0;"
    depends_on:
      - quakeflow_japan_minio
    networks:
      - quakeflow_japan_network

  # Dagster build (custom)
  quakeflow_japan_dagster:
    container_name: quakeflow_japan_dagster
    build:
      context: ./dagster
    restart: on-failure
    expose:
      - "4001"
    networks:
      - quakeflow_japan_network

  # Dagster UI (Dagit)
  quakeflow_japan_dagit:
    image: quakeflow_japan_dagster:latest
    entrypoint:
      - dagit
      - -h
      - "0.0.0.0"
      - -p
      - "3001"
      - -w
      - workspace.yaml
    container_name: quakeflow_japan_dagit
    expose:
      - "3001"
    ports:
      - "3001:3001"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./dagster_home:/opt/dagster/dagster_home
    env_file:
      - .env
    networks:
      - quakeflow_japan_network

  # Dagster Daemon
  quakeflow_japan_daemon:
    image: quakeflow_japan_dagster:latest
    entrypoint:
      - dagster-daemon
      - run
    container_name: quakeflow_japan_daemon
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./dagster_home:/opt/dagster/dagster_home
    env_file:
      - .env
    networks:
      - quakeflow_japan_network

  # Spark Master
  spark-master:
    image: bitnami/spark:latest
    container_name: spark-master
    hostname: spark-master
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
      - SPARK_LOCAL_DIRS=/tmp
    ports:
      - "7077:7077"   # Spark Master service
      - "8080:8080"   # Spark Master UI
    networks:
      - quakeflow_japan_network

  # Spark Worker
  spark-worker:
    image: bitnami/spark:latest
    deploy:
      replicas: 2
    depends_on:
      - spark-master
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=1G
      - SPARK_WORKER_CORES=1
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
      - SPARK_LOCAL_DIRS=/tmp
    ports:
      - "8081"
      - "8082"

    networks:
      - quakeflow_japan_network

    # Metabase (BI Dashboard)
  metabase:
    image: metabase/metabase:latest
    container_name: metabase
    ports:
      - "3000:3000"
    depends_on:
      - quakeflow_japan_psql
    environment:
      MB_DB_TYPE: postgres
      MB_DB_DBNAME: ${POSTGRES_DB}
      MB_DB_PORT: 5432
      MB_DB_USER: ${POSTGRES_USER}
      MB_DB_PASS: ${POSTGRES_PASSWORD}
      MB_DB_HOST: quakeflow_japan_psql
    networks:
      - quakeflow_japan_network


networks:
  quakeflow_japan_network:
    driver: bridge
